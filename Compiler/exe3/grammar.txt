program  @ basic id ( ) block
block    @ { decls stmts }
decls    @ decls decl # ε
decl     @ type id ;
type     @ type [ num ] # basic
basic    @ float # int
stmts    @ stmts stmt # ε
stmt     @ var = expr ;
           # if ( bool ) stmt
           # if ( bool ) stmt else stmt
           # while ( bool ) stmt
           # do stmt while ( bool ) ;
           # break ;
           # block
var      @ var [ num ] # id
bool     @ bool || join # join
join     @ join && equality # equality
equality @ expr rel expr
rel      @ < # > # == # != # <= # >=
expr     @ expr1 opa term # term
term     @ temr1 opb unary # unary
unary    @ opc unary # factor
factor   @ ( expr ) # var # num # real # true # false
opa      @ + # -
opb      @ * # /
opc      @ ! # -